{"version":3,"sources":["core.js","events.js","get.js","jsonfn.js","mule.js","post.js","xhr.js"],"names":["window","init","jaxxy","modules","set","method","func","get","post","default","Date","getTime","xhr","events","on","el","eventName","handler","addEventListener","attachEvent","call","off","removeEventListener","detachEvent","url","data","async","successCallbacks","errorCallbacks","returnObj","then","a","push","error","handleCallbacks","callbacks","b","i","length","success","jsonfn","stringify","obj","JSON","key","value","Function","toString","RegExp","parse","str","date2obj","iso8061","prefix","substring","match","eval","slice","clone","tttt","mule","ready","postQueue","getQueue","messageQueue","randomTo","from","to","Math","floor","random","genID","id","payload","parentID","server","prev","element","contentWindow","postMessage","e","d","parent","console","log","muleServer","setGet","setPost","__muleReceiver","document","createElement","src","style","display","onload","body","appendChild","warn","event","k","undefined","message","type","successCallback","errorCallback","request","XMLHttpRequest","isAsync","open","onreadystatechange","this","readyState","status","responseText","send"],"mappings":"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","file":"jaxxy.min.js","sourcesContent":["/*This is the base file, where any core items will be placed, such namespacing and promises*/\r\n\r\n(function (window) {\r\n\t\"use strict\";\r\n\tvar init = function () {\r\n\r\n\t\tvar jaxxy = {\r\n\t\t\tmodules: {},\r\n\t\t\tset: function (method, func) {\r\n\t\t\t\tif (method === 'get') {\r\n\t\t\t\t\tjaxxy.get = func;\r\n\t\t\t\t}\r\n\t\t\t\telse if (method === 'post') {\r\n\t\t\t\t\tjaxxy.post = func;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdefault: function (method) {\r\n\t\t\t\tif (method === 'get') {\r\n\t\t\t\t\tjaxxy.get = jaxxy.modules.get;\r\n\t\t\t\t}\r\n\t\t\t\telse if (method === 'post') {\r\n\t\t\t\t\tjaxxy.get = jaxxy.modules.post;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\treturn jaxxy;\r\n\t}\r\n\r\n\twindow['jaxxy-' + new Date().getTime()] = window.jaxxy = init();\r\n\r\n}(window));","/*Adds a post method shortcut*/\r\n(function (window) {\r\n\t\"use strict\";\r\n\r\n\tif (typeof jaxxy === 'undefined' || !!jaxxy.modules.xhr) return false;\r\n\tvar events  = {};\r\n\tevents.on = function (el, eventName, handler) {\r\n\t\tif (el.addEventListener) {\r\n\t\t\tel.addEventListener(eventName, handler);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tel.attachEvent('on' + eventName, function() {\r\n\t\t\t\thandler.call(el);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tevents.off = function (el, eventName, handler) {\r\n\t\tif (el.removeEventListener) el.removeEventListener(eventName, handler);\r\n\t\telse el.detachEvent('on' + eventName, handler);\r\n\t}\r\n\r\n\r\n\tjaxxy.modules.events = events;\r\n}(window));\r\n\r\n\t\t","/*Adds a post method shortcut*/\r\n(function (window) {\r\n\t\"use strict\";\r\n\r\n\tif (typeof jaxxy === 'undefined' || !!jaxxy.modules.get) return false;\r\n\tvar get = function (url, data, async) {\r\n\t\tvar successCallbacks = [],\r\n\t\t\terrorCallbacks = [],\r\n\t\t\treturnObj = {\r\n\t\t\t\tthen: function (a) {\r\n\t\t\t\t\tif (typeof a === \"function\") successCallbacks.push(a);\r\n\t\t\t\t\treturn returnObj\r\n\t\t\t\t},\r\n\t\t\t\terror: function (a) {\r\n\t\t\t\t\tif (typeof a === \"function\") errorCallbacks.push(a);\r\n\t\t\t\t\treturn returnObj\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\thandleCallbacks = function (callbacks) {\r\n\t\t\t\treturn function (a, b) {\r\n\t\t\t\t\tfor (var i = 0; i < callbacks.length; i++) {\r\n\t\t\t\t\t\tcallbacks[i](a, b);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\treturnObj.success = returnObj.then;\r\n\r\n\r\n\t\t\tjaxxy.modules.xhr(\"GET\", url, data, async, handleCallbacks(successCallbacks), handleCallbacks(errorCallbacks))\r\n\r\n\r\n\t\treturn returnObj;\r\n\t}\r\n\r\n\tjaxxy.modules.get = get;\r\n\tjaxxy.set('get', get);\r\n}(window));\r\n\r\n\t\t","/**\r\n* JSONfn - javascript (both node.js and browser) plugin to stringify, \r\n*          parse and clone objects with Functions, Regexp and Date.\r\n*  \r\n* Version - 0.60.00\r\n* Copyright (c) 2012 - 2014 Vadim Kiryukhin\r\n* vkiryukhin @ gmail.com\r\n* http://www.eslinstructor.net/jsonfn/\r\n* \r\n* Licensed under the MIT license ( http://www.opensource.org/licenses/mit-license.php )\r\n*\r\n*   USAGE:\r\n*     browser:\r\n*         JSONfn.stringify(obj);\r\n*         JSONfn.parse(str[, date2obj]);\r\n*         JSONfn.clone(obj[, date2obj]);\r\n*\r\n*     nodejs:\r\n*       var JSONfn = require('path/to/json-fn');\r\n*       JSONfn.stringify(obj);\r\n*       JSONfn.parse(str[, date2obj]);\r\n*       JSONfn.clone(obj[, date2obj]);\r\n*\r\n*\r\n*     @obj      -  Object;\r\n*     @str      -  String, which is returned by JSONfn.stringify() function; \r\n*     @date2obj - Boolean (optional); if true, date string in ISO8061 format\r\n*                 is converted into a Date object; otherwise, it is left as a String.\r\n*/\r\n\r\n\r\n(function (window) {\r\n\r\n  \"use strict\";\r\n  if (typeof jaxxy === 'undefined' || !!jaxxy.modules.jsonfn) return false;\r\n\r\n  var jsonfn = {};\r\n\r\n  jsonfn.stringify = function (obj) {\r\n\r\n    return JSON.stringify(obj, function (key, value) {\r\n      if (value instanceof Function || typeof value == 'function') {\r\n        return value.toString();\r\n      }\r\n      if (value instanceof RegExp) {\r\n        return '_PxEgEr_' + value;\r\n      }\r\n      return value;\r\n    });\r\n  };\r\n\r\n  jsonfn.parse = function (str, date2obj) {\r\n\r\n    var iso8061 = date2obj ? /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/ : false;\r\n\r\n    return JSON.parse(str, function (key, value) {\r\n      var prefix;\r\n\r\n      if (typeof value != 'string') {\r\n        return value;\r\n      }\r\n      if (value.length < 8) {\r\n        return value;\r\n      }\r\n\r\n      prefix = value.substring(0, 8);\r\n\r\n      if (iso8061 && value.match(iso8061)) {\r\n        return new Date(value);\r\n      }\r\n      if (prefix === 'function') {\r\n        return eval('(' + value + ')');\r\n      }\r\n      if (prefix === '_PxEgEr_') {\r\n        return eval(value.slice(8));\r\n      }\r\n\r\n      return value;\r\n    });\r\n  };\r\n\r\n  jsonfn.clone = function (obj, date2obj) {\r\n    return jsonfn.parse(jsonfn.stringify(obj), date2obj);\r\n  };\r\n\r\n  jaxxy.modules.jsonfn = jsonfn;\r\n\r\n}(window));\r\n\r\n\r\n","var tttt\r\n/*Utilities for the cors avoiding mule*/\r\n(function (window) {\r\n\t\"use strict\";\r\n\r\n\tif (typeof jaxxy === 'undefined' || !!jaxxy.modules.mule) return false;\r\n\tvar mule = {\r\n\t\tready:false,\r\n\t\tpostQueue:[],\r\n\t\tgetQueue:[],\r\n\t\tmessageQueue:{}\r\n\t},\r\n\tevents = jaxxy.modules.events;\r\n\r\n\tmule.randomTo = function (from, to) {\r\n\t\treturn Math.floor(Math.random() * (to - from + 1) + from);\r\n\t};\r\n\r\n\tmule.genID = function () {\r\n\t\treturn (new Date().getTime()) + '-' + mule.randomTo(100000,999999) + '-' + mule.randomTo(100000,999999)  + '-' + mule.randomTo(100000,999999);\r\n\t};\r\n\r\n\tmule.post = function(url, data, func) {\r\n\t\tif(!mule.ready) {\r\n\t\t\tmule.postQueue.push([url, data, func]);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar id = mule.genID(),\r\n\t\tpayload = jaxxy.modules.jsonfn.stringify({id:id, parentID: mule.parentID, url:mule.server, data:data, func: function(prev) {\r\n\r\n\t\t\t/*$.ajax({\r\n\t\t\t\ttype: \"POST\",\r\n\t\t\t\turl: prev.url,\r\n\t\t\t\tdata: prev.data,\r\n\t\t\t\tcontentType: \"application/x-www-form-urlencoded;charset=UTF-8\",\r\n\t\t\t\tsuccess: function (d) {\r\n\t\t\t\t\tparent.postMessage(jsonfn.stringify({parentID: prev.parentID, id:prev.id, data:d}), \"*\");\r\n\t\t\t\t},\r\n\t\t\t\terror: function (e) {\r\n\t\t\t\t\tif(console) console.log(JSON.stringify(e))\r\n\t\t\t\t\t//alert('ERROR!')\r\n\t\t\t\t}\r\n\t\t\t})*/\r\n\r\n\t\t}});\r\n\r\n\t\tmule.element.contentWindow.postMessage(payload, \"*\");\r\n\t\tmule.messageQueue[id] = function (e) { func(e); };\r\n\t};\r\n\t\t\t\r\n\tmule.get = function(url, data, func) {\r\n\t\tif(!mule.ready) {\r\n\t\t\tmule.getQueue.push([url, data, func]);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\r\n\t\tvar id = mule.genID(),\r\n\t\tpayload = jaxxy.modules.jsonfn.stringify({id:id, parentID: mule.parentID, url: url, data:data, func: function(prev) {\r\n\r\n\t\t\t//console.log(222);\r\n\r\n\t\t\tjaxxy.get(prev.url)\r\n\t\t\t\t.success(function (d) {\r\n\t\t\t\t\tparent.postMessage(jaxxy.modules.jsonfn.stringify({parentID: prev.parentID, id:prev.id, data:d}), \"*\");\r\n\t\t\t\t})\r\n\t\t\t\t.error(function (e) {\r\n\t\t\t\t\tif(console) console.log(JSON.stringify(e))\r\n\t\t\t\t});\r\n\r\n\t\t}});\r\n\r\n\t\tmule.element.contentWindow.postMessage(payload, \"*\");\r\n\t\tmule.messageQueue[id] = func;\r\n\t}\r\n\r\n\tmule.init = function (muleServer, setGet, setPost) {\r\n\t\tif (!muleServer) {\r\n\t\t\treturn console.warn('Ignored - no server was specified');\t\t\t\r\n\t\t}\r\n\r\n\t\tif (!!setGet) jaxxy.set('get', mule.get);\r\n\r\n\t\tif (!!setPost) jaxxy.set('post', mule.post);\r\n\r\n\t\tmule.muleServer = muleServer;\r\n\t\t\r\n\t\tmule.parentID = mule.genID();\r\n\r\n\t\t//events.off(window, \"message\", jaxxy.__muleReceiver);\r\n\r\n\t\tevents.on(window, \"message\", mule.__muleReceiver);\r\n\r\n\t\tmule.element = document.createElement('iframe');\r\n\r\n\t\tmule.element.src = mule.muleServer;\r\n\r\n\t\tmule.element.style.display = 'none';\r\n\r\n\t\tevents.on(mule.element, 'load', function () {\r\n\t\t\tmule.ready = true;\r\n\t\t\tfor(var i in mule.getQueue){\r\n\t\t\t\tmule.get(mule.getQueue[i][0], mule.getQueue[i][1], mule.getQueue[i][2]);\r\n\t\t\t}\r\n\r\n\t\t\tfor(var i in mule.postQueue){\r\n\t\t\t\tmule.post(mule.postQueue[i][0], mule.postQueue[i][1], mule.postQueue[i][2]);\r\n\t\t\t}\r\n\t\t\tmule.element.onload = null;\r\n\t\t});\r\n\r\n\t\tdocument.body.appendChild(mule.element);\r\n\t}\r\n\r\n\tmule.__muleReceiver = function (event) {\r\n\t\tif (event.data) {\r\n\t\t\ttry {\r\n\t\t\t\tvar k = jaxxy.modules.jsonfn.parse(event.data);\r\n\t\t\t\tconsole.log(mule.messageQueue[k.id])\r\n\t\t\t\tif(!!k && !!mule.messageQueue[k.id] && !!k.id) {\r\n\t\t\t\t\tmule.messageQueue[k.id](k);\r\n\t\t\t\t}\r\n\t\t\t} catch (e){ if (typeof console !== null && typeof console !== undefined) console.error(e.message)}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t\r\n\tjaxxy.modules.mule = mule;\r\n\r\n\r\n\r\n}(window));","/*Adds a post method shortcut*/\r\n(function (window) {\r\n\t\"use strict\";\r\n\r\n\tif (typeof jaxxy === 'undefined' || !!jaxxy.modules.post) return false;\r\n\tvar post = function (url, data, async) {\r\n\t\tvar successCallbacks = [],\r\n\t\t\terrorCallbacks = [],\r\n\t\t\treturnObj = {\r\n\t\t\t\tthen: function (a) {\r\n\t\t\t\t\tif (typeof a === \"function\") successCallbacks.push(a);\r\n\t\t\t\t},\r\n\t\t\t\terror: function (a) {\r\n\t\t\t\t\tif (typeof a === \"function\") errorCallbacks.push(a);\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\thandleCallbacks = function (callbacks) {\r\n\t\t\t\treturn function (a, b) {\r\n\t\t\t\t\tfor (var i = 0; i < callbacks.length; i++) {\r\n\t\t\t\t\t\tcallbacks[i](a, b);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\treturnObj.success = returnObj.then;\r\n\r\n\r\n\t\t\tjaxxy.xhr(\"POST\", url, data, async, handleCallbacks(successCallbacks), handleCallbacks(errorCallbacks))\r\n\r\n\r\n\t\treturn returnObj;\r\n\t};\r\n\r\n\tjaxxy.modules.post = post;\r\n\tjaxxy.set('post', post);\r\n\r\n}(window));","/*Adds a post method shortcut*/\r\n(function (window) {\r\n\t\"use strict\";\r\n\r\n\tif (typeof jaxxy === 'undefined' || !!jaxxy.modules.xhr) return false;\r\n\tvar xhr = function (type, url, data, async, successCallback, errorCallback) {\r\n\t\tvar request = new XMLHttpRequest(),\r\n\t\t\tisAsync = (typeof async === \"null\" || typeof async === \"undefined\"  || !!async ? true : false);\r\n\t\t\r\n\t\t//Type: GET/POST\r\n\t\t//Url: URL to get/post\r\n\t\t//Async: is this async or not (defaults to async)\r\n\t\trequest.open(type, url,  isAsync);\r\n\r\n\t\trequest.onreadystatechange = function() {\r\n\t\t\tif (this.readyState === 4) {\r\n\t\t\t\tif (this.status >= 200 && this.status < 400) {\r\n\t\t\t\t\t// Success!\r\n\t\t\t\t\tif (typeof successCallback === \"function\") successCallback(this.responseText, this);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (typeof errorCallback === \"function\") errorCallback(this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\trequest.send(data);\r\n\t\trequest = null;\r\n\t};\r\n\r\n\tjaxxy.modules.xhr = xhr;\r\n}(window));\r\n\r\n\t\t"],"sourceRoot":"/source/"}